{"version":3,"sources":["FilterInput.js","logo.svg","Table.js","App.js","API.js","reportWebVitals.js","index.js"],"names":["FilterInput","users","updateUsers","useState","inputValue","updateInput","useEffect","filteredUsers","filter","name","first","toLowerCase","indexOf","value","onChange","e","target","Table","sortedUsers","updateSortedUsers","className","scope","onClick","updateSort","sort","a","b","nameA","nameB","map","location","city","state","thumbnail","picture","cell","phone","email","last","src","App","initialUsers","updateAvailableUsers","usersToRender","updateUsersToRender","axios","get","then","results","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAuBiBA,GCvBF,I,MDEK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAAkB,EACVC,mBAAS,IADC,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OAbAC,qBAAU,WACR,IAAMC,EACW,KAAfH,EACIH,EACAA,EAAMO,QACJ,qBAAGC,KAAQC,MACHC,cAAcC,QAAQR,EAAWO,gBAAkB,KAInET,EAAYK,KACX,CAACH,EAAYH,IAGd,uBAAOY,MAAOT,EAAYU,SAAU,SAAAC,GAAC,OAAIV,EAAYU,EAAEC,OAAOH,Y,QEiErDI,EAlFD,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MAAY,EACcE,mBAAS,IADvB,mBACpBe,EADoB,KACPC,EADO,KAK3B,OAFAb,qBAAU,kBAAMa,EAAkBlB,KAAQ,CAACA,IAGzC,8BACE,wBAAOmB,UAAU,QAAjB,UACE,gCACE,+BAEE,oBACEC,MAAM,MACNC,QAAS,WACP,IACMC,EADS,YAAOtB,GACOuB,MAAK,SAACC,EAAGC,GACpC,IAAMC,EAAQF,EAAEhB,KAAKC,MACfkB,EAAQF,EAAEjB,KAAKC,MAErB,OAAIiB,EAAQC,GACF,EAEND,EAAQC,EACH,EAGF,KAGTT,EAAkBI,IAlBtB,mBAuBA,oBAAIF,MAAM,MAAV,kBAEA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBAGA,oBAAIA,MAAM,MAAV,0BAGJ,gCACGH,EAAYW,KACX,oBACEC,SAAYC,EADd,EACcA,KAAMC,EADpB,EACoBA,MACPC,EAFb,EAEEC,QAAWD,UACXE,EAHF,EAGEA,KACAC,EAJF,EAIEA,MAEAC,EANF,EAMEA,MANF,IAOE5B,KAAQC,EAPV,EAOUA,MAAO4B,EAPjB,EAOiBA,KAPjB,OASE,+BAEE,6BAAK5B,IACL,6BAAK4B,IAEL,6BAAKD,IACL,6BAAKD,IACL,6BAAKD,IACL,6BAAKJ,IACL,6BAAKC,IAEL,6BACE,qBAAKO,IAAKN,MAGZ,yBAfOI,c,iBC5BRG,MAxBf,WAAe,MAEgCrC,mBAAS,IAFzC,mBAENsC,EAFM,KAEQC,EAFR,OAGgCvC,mBAAS,IAHzC,mBAGNwC,EAHM,KAGSC,EAHT,KASb,OAJAtC,qBAAU,WCTDuC,IAAMC,IAAI,iDDUNC,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,QAAX,OAA2BN,EAAqBM,QAC/D,IAGD,sBAAK5B,UAAU,MAAf,UACE,oDACA,wDACA,cAAC,EAAD,CAAanB,MAAOwC,EAAcvC,YAAa0C,IAC/C,cAAC,EAAD,CAAO3C,MAAO0C,QETLO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.84dd9381.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// filters users by first name\nconst FilterInput = ({ users, updateUsers }) => {\n    const [inputValue, updateInput] = useState(\"\");\n  \n    useEffect(() => {\n      const filteredUsers =\n        inputValue === \"\"\n          ? users\n          : users.filter(\n              ({ name: { first } }) =>\n                first.toLowerCase().indexOf(inputValue.toLowerCase()) >= 0\n            );\n        \n  \n      updateUsers(filteredUsers);\n    }, [inputValue, users]);\n  \n    return (\n      <input value={inputValue} onChange={e => updateInput(e.target.value)} />\n    );\n  };\n  \n  export default FilterInput;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\n// creates table from user data\nconst Table = ({ users }) => {\n  const [sortedUsers, updateSortedUsers] = useState([]);\n\n  useEffect(() => updateSortedUsers(users), [users]);\n\n  return (\n    <div>\n      <table className=\"table\">\n        <thead>\n          <tr>\n          \n            <th\n              scope=\"col\"\n              onClick={() => {\n                const usersCopy = [...users];\n                const updateSort = usersCopy.sort((a, b) => {\n                  const nameA = a.name.first;\n                  const nameB = b.name.first;\n\n                  if (nameA < nameB) {\n                    return -1;\n                  }\n                  if (nameA > nameB) {\n                    return 1;\n                  }\n\n                  return 0;\n                });\n\n                updateSortedUsers(updateSort);\n              }}\n            >\n              First\n            </th>\n            <th scope=\"col\">Last</th>\n          \n            <th scope=\"col\">email</th>\n            <th scope=\"col\">phone</th>\n            <th scope=\"col\">cell</th>\n            <th scope=\"col\">city</th>\n            <th scope=\"col\">state</th>\n           \n           \n            <th scope=\"col\">picture</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedUsers.map(\n            ({\n              location: { city, state },\n              picture: { thumbnail },\n              cell,\n              phone,\n             \n              email,\n              name: { first, last }\n            }) => (\n              <tr key={email}>\n               \n                <th>{first}</th>\n                <td>{last}</td>\n               \n                <td>{email}</td>\n                <td>{phone}</td>\n                <td>{cell}</td>\n                <td>{city}</td>\n                <td>{state}</td>\n              \n                <td>\n                  <img src={thumbnail} />\n                </td>\n\n                <td></td>\n              </tr>\n            )\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;","import logo from './logo.svg';\nimport './App.css';\nimport FilterInput from \"./FilterInput\";\nimport Table from \"./Table\";\nimport { getUsers } from \"./API\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  // hooks\n  const [initialUsers, updateAvailableUsers] = useState([]);\n  const [usersToRender, updateUsersToRender] = useState([]);\n\n  useEffect(() => {\n    getUsers().then(({ data: { results } }) => updateAvailableUsers(results));\n  }, []);\n  \n  return (\n    <div className=\"App\">\n      <h1>Employee Directory</h1>\n      <p>Start typing first name</p>\n      <FilterInput users={initialUsers} updateUsers={updateUsersToRender} />\n      <Table users={usersToRender} />\n      \n   \n    \n        \n        \n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\n// api call to fill user table\nexport const getUsers = function() {\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\")\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}